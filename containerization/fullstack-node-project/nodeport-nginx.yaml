apiVersion: apps/v1
kind: Deployment
metadata:
  name: fullstack-node-project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fullstack-node-project
  template:
    metadata:
      labels:
        app: fullstack-node-project
    spec:
      containers:
        - name: fullstack-node-project
          image: nandanisah/fullstack-node-project  # Ensure this matches the built image tag
          ports:
            - containerPort: 5000
          env:
            - name: NODE_ENV
              value: "production"

---
apiVersion: v1
kind: Service
metadata:
  name: fullstack-node-project
spec:
  type: ClusterIP  # Exposes the service internally to be accessed by Nginx
  selector:
    app: fullstack-node-project
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;

        location / {
            proxy_pass http://fullstack-node-project:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort  # Exposes the Nginx service to be accessed externally
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30001
